NDSummary.OnToolTipsLoaded("File:Terminology.php",{4:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\">Wildcards are placeholders that represent a controller, method, or parameter for a routed path.</div></div>",5:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\">View partials are as they sound, they\'re partial view (e.g. you can think of header and footer files as view partials) files that you load in to main view files. Which is especially useful if you\'re using modules to create widgets.</div></div>",6:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\">Modules are often used to create so-called Widgets making use of view partials to load in to other view files that may belong to another module or controller. Sometimes as an application evolves and grows it may be necessary to create additional features. And widgets allow you to do this quickly instead of sifting through thousands of lines of code to tweak things. The distinction between Modules and Widgets is small but you can think of Modules as one of many parts that make up the sum of the application and a Widget is only one or more smaller parts that are add-ons to an application but the application is not dependent on them, where as, if you remove a Module it may affect how the application runs.</div></div>",7:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\"><b>MVC</b> stands for Model-View-Controller. In programming, people have cleverly created patterns to organize their code and/or applications. It\'s a great way of staying organized. Not only this, but this way of separating code allows developers to more easily work with designers (this will make sense soon).</div></div>",8:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\"><b>PHP</b> stands for Pre-processor-Hypertext-PHP. Kind of a redundant acronym but it used to stand for Personal-Home-Page and was originally created as a Templating system which evolved in to a legitimate web programming language despite the fact that it\'s technically a server-side scripting language. If you break down each word you can get sort of an idea of what PHP is. PHP takes web text (i.e. hypertext) and dynamically pre-processes it (i.e. it does something with the text before displaying it to screen). For instance, a static (i.e. text rarely changes) site displays text that you manually have to edit every now and again. Which means if you have to change something that may mean having to manually change things across the entire website. Where as, PHP allows you to change something in one location and it will dynamically change things across the whole website which saves a lot of time.</div></div>",9:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\">All online text that you see visually on your computer screen; just a fancy name for web text or online text.</div></div>",18:"<div class=\"NDToolTip TInformation LPHP\"><div class=\"TTSummary\">E.g. <b>1.0.0</b></div></div>"});